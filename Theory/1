#include <iostream>
using namespace std;

struct cycleArray {
	int* data;
	size_t size;
	cycleArray(size_t t) {
		size = t;
		data = new int[size];
	}
	~cycleArray() {
		delete[] data;
	}
	cycleArray(const cycleArray& A) {
		if (data) {
			delete[] data;
		}
		size = A.size;
		data = new int[size];
		for (int i = 0; i < size; i++) {
			data[i] = A.data[i];
		}
	}
	cycleArray operator=(const cycleArray& A) {
		if (data) {
			delete[] data;
		}
		size = A.size;
		data = new int[size];
		for (int i = 0; i < size; i++) {
			data[i] = A.data[i];
		}
		return *this;
	}
	int operator[](size_t i) const{
		return data[i % size];
	}
	int& operator[](size_t i){
		return data[i % size];
	}
};

int main() {
	int t;
	cin >> t;
	cycleArray A(t);
	for (int i = 0; i < t; i++) {
		cin >> A[i];
	}
	for (int i = 0; i < 3 * t; i++) {
		cout << A[i]<<" ";
	}
	return 0;
}
